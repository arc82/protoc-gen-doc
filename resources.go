// AUTOGENERATED CODE. DO NOT EDIT.
package protoc_gen_doc

import (
	"bytes"
	"compress/gzip"
	"encoding/base64"
	"fmt"
	"io"
)

var embeddedResources = map[string]string{
	"docbook.tmpl": "H4sIAAAAAAAA/+xZ30/bOhR+719h5fEiEq64SFeTW6TBqmkChIDt3U1OW2uOndlOAUX93ycnIb8Tl7UUtvGCZJ/P58TH5/uOa/DpQ8jQCqSigo+df90jBwH3RUD5Yux8vZse/u+cTkaYSE19BpMRQlhTzWByLYUWvmDoXPhxCFwTTQXHXmYdIZQkkvAFIHdKGaj12ixV4BuUMReOksS9IiGs15W1ZnVEJEHuOShf0sisSl1U/F6CUmSRuy6dIxqMnSRxpzFjmWMnc1mNeCH4oiPqUFxjo3PkfiZqSoEFqpjHmswYoLkkIYwdwlgRsAiJfUaU4iRsRS8NKHPb+CDjYiFFHCFfMDV2/qs4RwibyQh8Y7yngV6OnX8cb2vEkXtiBx03IXoJJKjOIISluK/PIISBa/k4SXeLvWzQDbl7jGAYcUFmwIYhlZPsBGKv8Y3Ya20E65kIGusq9V2rBuvGKwU/9N2YUf4dmT/Ay4o2KTEVnVdRNsSegU2G/ZkVJlu2uJ0MyEr/HOYkZvobYbGJanCTfO4DSpKm3UsBSQI86Anayr1Jawqvn0c9+9jLGFHQ2ksJWFK46qEg7acHDdzI3O6JewVKQ4DKCBYOn+yDw2+D5UVOtmX6R6IsiKs4nIF8ZTHoqDJrjl5JENr+zgTXhHLKFw3PpeH5opMdy1+lOtirXXSqprJQeBzu7+qyK6VLk2yTt+N9yNuWumT29hvISZbvnUvJdrTcF6l6aJQP+tp6/UdGUd7mV8ghgxWw/j6NKZ8LGRI2yJb3Tv7eyd87+R/VyWu830R88hq5Bbmi/q89Qbx8D+/o35egl+JtvDG8uGBle0X2Tn8DP2JQGtml6wZUJLiCDaAvrk/5Ue5BnPL8NJQkn91aqp5y2nKfTT9bpt7ehaVhqEhJ54PorU8YkdlVOy20Ol3tl5T+K4qNhh32Extgt/Y2B1qnlJ+0G0mhRT8Tn+4SQpsE9gPODg6sTr6QFbGCrh/1UvA+WKPcWmxvc73sMmlB1Jnel5an1pM+z1foVBkP7cFohEmYFXUWRRt5M5nbCJhlrxfaYmuTqw2m1nna0eErlBxhr/j/xs8AAAD//2FyhLQRGQAA",
	"html.tmpl": "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",
	"markdown.tmpl": "H4sIAAAAAAAA/+RWTW/bMAy9+1dwyQ5rCyf3IvFh7YphaIuiLXYphlVJmMSAInmWHKyw/N8HSv6Q7XgJUGCX+WKTkijyvSfKY3hIpZZLyeFaLrMdCs10LEUwYyDYDucjLZPRNAqC8Rie2YIjyDVcSaFRaBXkecrEBmFyE3NURRHk+cd1zPEnrYXLOUzu2Q6LIjiHlzwvjR+fxvX3WQBQB7lDpdjGxgEAcGtupdj4624yzv21KFZ2fh3li8h27w3xW6NQsRReHKow5LhHDs2wjddUXBQh1mMDsZ8w3cfLTpHHs6ve5/DytGScpfCd8Qzh+S1BSkNZZ7gnZ6jJeRacTk/Ndp0LcT5LgPF4I+ajNN5s9SiaMdimuJ6PxqSK6FkmsymLZtMkInnUa2njyTWqZRonJCbn6ZPs79pUTTuPXbiGuMMh4zVMvjJ1EyNfUUAD9hOMhQUM3LIFcjDgrQQTGAjpAfeGtlk+YHz0KD6EljLT1Ammlhft5xPo7DM322Zhp+e5kIsU2pW4Oq5xzTKuLatFAaV5CbZuf6hUgk2wrY0GkZaATSPYBpnPTNHrPtstMB1CqI9SDdIwWs3eBxFrAeZsaicsFrHYdEdcev8GOjc0+xCGgGIFu1KnEIaRJ9+qu7xTuwZo7BgBJ6BtKxtE+hh+HhJ9BJBKrco/JCwPg4EeWOFxsHkG/68yX3vSfB3UZkNIC/+OLr1r5ag0/ybLO9RbuarU+Yi/MlS6ouYRVSKFwsoepKbLQtfs2sa/HyiB4W5bptRtuqW73XvdfJfzSQuOHZIeJaqEvWKjPEt0HfavacJ3ktD/VgXgvdSowMDVxUXl+sb2rPp+eNNbKUrrML4ekNA/GwcOgUurwddXi/0XdGiMYBpB21WSQSnX5yNJ/DHK3bdd/pWnhudPAAAA//8m3DykdQoAAA==",
}

func fetchResource(name string) ([]byte, error) {
	raw, ok := embeddedResources[name]
	if !ok {
		return nil, fmt.Errorf("Could not find resource for '%s'", name)
	}

	compressed, err := base64.StdEncoding.DecodeString(raw)
	if err != nil {
		return nil, err
	}

	var out bytes.Buffer
	buf := bytes.NewBuffer(compressed)
	
	r, err := gzip.NewReader(buf)
	if err != nil {
		return nil, err
	}

	if _, err := io.Copy(&out, r); err != nil {
		return nil, err
	}

	return out.Bytes(), nil
}
